version: "3.8"

services:
  # Home Server Proxy for any *.sor4chi.com
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - home-network
    depends_on:
      grafana:
        condition: service_started
      mc-vanilla:
        condition: service_healthy
    restart: always

  # Monitoring service
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - home-network
    depends_on:
      - influxdb2
      - prometheus
    restart: always

  # InfluxDB2 for storing metrics
  influxdb2:
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2
    networks:
      - home-network
    restart: always

  # Prometheus for storing metrics
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
      - prometheus-tsdb:/prometheus
    depends_on:
      - mc-vanilla-monitor
    networks:
      - home-network

  mc-vanilla:
    build:
      context: ./mc-vanilla
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    env_file:
      - ./secrets/.env.mc-vanilla
    ports:
      - "25565:25565"
    volumes:
      - mc-data:/data
      - ./mc-vanilla/server.properties:/data/server.properties
      - ./mc-vanilla/ops.json:/data/ops.json
      - ./mc-vanilla/whitelist.json:/data/whitelist.json
      - ./mc-vanilla/banned-players.json:/data/banned-players.json
      - ./mc-vanilla/banned-ips.json:/data/banned-ips.json
      - ./mc-vanilla/server-icon.png:/data/server-icon.png
    networks:
      - home-network
    restart: always

  mc-vanilla-restore-backup:
    image: itzg/mc-backup
    restart: "no"
    entrypoint: restore-tar-backup
    volumes:
      - mc-data:/data
      - ./backups/mc-vanilla:/backups:ro
    networks:
      - home-network

  mv-vanilla-backups:
    image: itzg/mc-backup
    depends_on:
      mc-vanilla:
        condition: service_healthy
    environment:
      BACKUP_INTERVAL: "1d"
      RCON_HOST: mc-vanilla
      INITIAL_DELAY: 0
    volumes:
      - mc-data:/data:ro
      - ./backups/mc-vanilla:/backups
    networks:
      - home-network
    restart: always

  mc-vanilla-web:
    image: itzg/rcon
    environment:
      RWA_ADMIN: "TRUE"
      RWA_RCON_HOST: mc-vanilla
    ports:
      - "4326:4326"
      - "4327:4327"
    env_file:
      - ./secrets/.env.mc-vanilla
    networks:
      - home-network
    depends_on:
      mc-vanilla:
        condition: service_healthy
    restart: always

  mc-vanilla-monitor:
    image: itzg/mc-monitor
    command: export-for-prometheus
    environment:
      EXPORT_SERVERS: mc-vanilla
      DEBUG: "true"
    depends_on:
      - mc-vanilla
    networks:
      - home-network

networks:
  home-network:
    driver: bridge

secrets:
  influxdb2-admin-username:
    file: ./secrets/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ./secrets/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ./secrets/.env.influxdb2-admin-token

volumes:
  grafana-storage:
  influxdb2-data:
  influxdb2-config:
  prometheus-tsdb:
  mc-data:
